rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Reglas para usuarios
    match /users/{userId} {
      // Los usuarios pueden leer sus propios datos
      allow read: if request.auth != null && request.auth.uid == userId;
      // Solo admins pueden leer todos los usuarios
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Los usuarios pueden actualizar su propio perfil (no role)
      allow update: if request.auth != null && 
        request.auth.uid == userId && 
        !('role' in request.resource.data.diff(resource.data));
      // Solo admins pueden crear/eliminar usuarios
      allow create, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para categorías de contenido
    match /content_categories/{categoryId} {
      // Todos pueden leer categorías activas
      allow read: if resource.data.is_active == true;
      // Solo admins pueden modificar
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para páginas de contenido
    match /content_pages/{pageId} {
      // Todos pueden leer páginas publicadas
      allow read: if resource.data.is_published == true;
      // Solo admins pueden modificar
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para secciones de contenido
    match /content_sections/{sectionId} {
      // Todos pueden leer secciones (si la página padre está publicada)
      allow read: if get(/databases/$(database)/documents/content_pages/$(resource.data.page_id)).data.is_published == true;
      // Solo admins pueden modificar
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para ejercicios de código
    match /code_exercises/{exerciseId} {
      // Todos pueden leer ejercicios activos
      allow read: if resource.data.is_active == true;
      // Solo admins pueden modificar
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para submissions de código
    match /code_submissions/{submissionId} {
      // Los usuarios pueden leer sus propias submissions
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.user_id;
      // Los usuarios pueden crear sus propias submissions
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.user_id;
      // Solo admins pueden leer todas las submissions
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para progreso de usuario
    match /user_progress/{userId}/pages/{pageId} {
      // Los usuarios pueden leer/escribir su propio progreso
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Los admins pueden leer todo el progreso
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para archivos subidos
    match /uploaded_files/{fileId} {
      // Solo admins pueden gestionar archivos
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Por defecto, denegar todo lo demás
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 